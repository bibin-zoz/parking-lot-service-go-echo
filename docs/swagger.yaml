basePath: /
definitions:
  parking-lot-service_internal_models.ExitRequest:
    properties:
      ticket_id:
        example: 1
        type: integer
    type: object
  parking-lot-service_internal_models.FreeSlots:
    description: FreeSlots holds information about the available parking slots for
      different types of vehicles
    properties:
      four_wheel:
        example: 15
        type: integer
      heavy_vehicles:
        example: 2
        type: integer
      two_wheel:
        example: 5
        type: integer
    type: object
  parking-lot-service_internal_models.ParkReq:
    description: ParkReq is the request structure for parking a vehicle
    properties:
      parking_lot_id:
        example: 1
        type: integer
      vehicle_number:
        example: ABC123
        type: string
      vehicle_type_id:
        example: 1
        type: integer
    type: object
  parking-lot-service_internal_models.ParkingLot:
    description: ParkingLot holds details about the parking lot such as available
      spots and tariffs
    properties:
      bus_spots:
        example: 5
        type: integer
      bus_tariff_daily:
        example: 100
        type: number
      bus_tariff_hourly:
        example: 15
        type: number
      car_spots:
        example: 20
        type: integer
      car_tariff:
        example: 20
        type: number
      id:
        example: 1
        type: integer
      motorcycle_spots:
        example: 10
        type: integer
      motorcycle_tariff:
        example: 10
        type: number
      name:
        example: Main Parking Lot
        type: string
    type: object
  parking-lot-service_internal_models.Receipt:
    description: Receipt is issued when a vehicle exits the parking lot
    properties:
      bill_amount:
        example: 40
        type: number
      entry_time:
        example: "2023-07-15T19:20:30+01:00"
        type: string
      exit_time:
        example: "2023-07-15T21:20:30+01:00"
        type: string
      id:
        example: 1
        type: integer
      parking_lot_id:
        example: 1
        type: integer
      rate:
        example: 20
        type: number
      rate_type:
        example: Hourly
        type: string
      vehicle_type:
        example: Car
        type: string
    type: object
  parking-lot-service_internal_models.Ticket:
    description: Ticket is issued when a vehicle is parked
    properties:
      entry_time:
        example: "2023-07-15T19:20:30+01:00"
        type: string
      id:
        example: 1
        type: integer
      is_parked:
        example: true
        type: boolean
      parking_lot_id:
        example: 1
        type: integer
      vehicle_number:
        example: ABC123
        type: string
      vehicle_type:
        example: Car
        type: string
      vehicle_type_id:
        example: 1
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for a parking lot service.
  title: Parking Lot API
  version: "1.0"
paths:
  /park-vehicle:
    delete:
      consumes:
      - application/json
      description: Exit a parked vehicle from the parking lot
      parameters:
      - description: Exit Request object
        in: body
        name: exitRequest
        required: true
        schema:
          $ref: '#/definitions/parking-lot-service_internal_models.ExitRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parking-lot-service_internal_models.Receipt'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Exit a parked vehicle
      tags:
      - parking
    post:
      consumes:
      - application/json
      description: Park a vehicle in the parking lot
      parameters:
      - description: Parking Request object
        in: body
        name: parkReq
        required: true
        schema:
          $ref: '#/definitions/parking-lot-service_internal_models.ParkReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/parking-lot-service_internal_models.Ticket'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Park a vehicle
      tags:
      - parking
  /parking-lots:
    get:
      description: Retrieve all existing parking lots
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/parking-lot-service_internal_models.ParkingLot'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all parking lots
      tags:
      - parkinglot
    post:
      consumes:
      - application/json
      description: Create a new parking lot with specified details
      parameters:
      - description: Parking Lot object to be created
        in: body
        name: parkingLot
        required: true
        schema:
          $ref: '#/definitions/parking-lot-service_internal_models.ParkingLot'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/parking-lot-service_internal_models.ParkingLot'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new parking lot
      tags:
      - parkinglot
  /parking-lots/{id}:
    delete:
      description: Delete a parking lot identified by its ID
      parameters:
      - description: Parking Lot ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a parking lot
      tags:
      - parkinglot
    get:
      description: Retrieve details of a parking lot identified by its ID
      parameters:
      - description: Parking Lot ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parking-lot-service_internal_models.ParkingLot'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a parking lot by ID
      tags:
      - parkinglot
    put:
      consumes:
      - application/json
      description: Update details of a parking lot identified by its ID
      parameters:
      - description: Parking Lot ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Parking Lot object
        in: body
        name: parkingLot
        required: true
        schema:
          $ref: '#/definitions/parking-lot-service_internal_models.ParkingLot'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parking-lot-service_internal_models.ParkingLot'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a parking lot
      tags:
      - parkinglot
  /parking-lots/free-slots/{parkingLotID}:
    get:
      description: Retrieve the number of available slots in a parking lot identified
        by its ID
      parameters:
      - description: Parking Lot ID
        in: path
        name: parkingLotID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parking-lot-service_internal_models.FreeSlots'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get free slots in a parking lot
      tags:
      - parkinglot
swagger: "2.0"
