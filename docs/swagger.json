{
    "swagger": "2.0",
    "info": {
        "description": "parking-lot-service management. Added sample data in vehicle types,parking lots",
        "title": "Parking Lot API",
        "contact": {},
        "version": "1.0"
    },
    "host": "parkinglot.bibinvinod.online",
    "basePath": "/",
    "paths": {
        "/park-vehicle": {
            "post": {
                "description": "Park a vehicle in the parking lot vehicle number must have min 3 alphabets and 4 numbers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking"
                ],
                "summary": "Park a vehicle",
                "parameters": [
                    {
                        "description": "Parking Request object",
                        "name": "parkReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/parking-lot-service_internal_models.ParkReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/parking-lot-service_internal_models.Ticket"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Exit a parked vehicle from the parking lot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking"
                ],
                "summary": "Exit a parked vehicle",
                "parameters": [
                    {
                        "description": "Exit Request object",
                        "name": "exitRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/parking-lot-service_internal_models.ExitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/parking-lot-service_internal_models.Receipt"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/parking-lots": {
            "get": {
                "description": "Retrieve all existing parking lots",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkinglot"
                ],
                "summary": "Get all parking lots",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/parking-lot-service_internal_models.ParkingLot"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new parking lot with specified details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkinglot"
                ],
                "summary": "Create a new parking lot",
                "parameters": [
                    {
                        "description": "Parking Lot object to be created",
                        "name": "parkingLot",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/parking-lot-service_internal_models.ParkingLot"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/parking-lot-service_internal_models.ParkingLot"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/parking-lots/free-slots/{parkingLotID}": {
            "get": {
                "description": "Retrieve the number of available slots in a parking lot identified by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkinglot"
                ],
                "summary": "Get free slots in a parking lot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Parking Lot ID",
                        "name": "parkingLotID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/parking-lot-service_internal_models.FreeSlots"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/parking-lots/{id}": {
            "get": {
                "description": "Retrieve details of a parking lot identified by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkinglot"
                ],
                "summary": "Get a parking lot by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Parking Lot ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/parking-lot-service_internal_models.ParkingLot"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update details of a parking lot identified by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parkinglot"
                ],
                "summary": "Update a parking lot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Parking Lot ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Parking Lot object",
                        "name": "parkingLot",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/parking-lot-service_internal_models.ParkingLot"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/parking-lot-service_internal_models.ParkingLot"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a parking lot identified by its ID",
                "tags": [
                    "parkinglot"
                ],
                "summary": "Delete a parking lot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Parking Lot ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/vehicle-types": {
            "get": {
                "description": "Get all vehicle types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Get vehicle types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/parking-lot-service_internal_models.VehicleType"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "parking-lot-service_internal_models.ExitRequest": {
            "type": "object",
            "properties": {
                "ticket_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                }
            }
        },
        "parking-lot-service_internal_models.FreeSlots": {
            "description": "FreeSlots holds information about the available parking slots for different types of vehicles",
            "type": "object",
            "properties": {
                "four_wheel": {
                    "type": "integer",
                    "example": 15
                },
                "heavy_vehicles": {
                    "type": "integer",
                    "example": 2
                },
                "two_wheel": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "parking-lot-service_internal_models.ParkReq": {
            "type": "object",
            "properties": {
                "parking_lot_id": {
                    "type": "integer",
                    "example": 1
                },
                "vehicle_number": {
                    "type": "string",
                    "example": "AB01C1234"
                },
                "vehicle_type_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "parking-lot-service_internal_models.ParkingLot": {
            "description": "ParkingLot holds details about the parking lot such as available spots and tariffs",
            "type": "object",
            "properties": {
                "bus_spots": {
                    "type": "integer"
                },
                "bus_tariff_daily": {
                    "type": "number"
                },
                "bus_tariff_hourly": {
                    "type": "number"
                },
                "car_spots": {
                    "type": "integer"
                },
                "car_tariff": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "motorcycle_spots": {
                    "type": "integer"
                },
                "motorcycle_tariff": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "parking-lot-service_internal_models.Receipt": {
            "description": "Receipt is issued when a vehicle exits the parking lot",
            "type": "object",
            "properties": {
                "bill_amount": {
                    "type": "number",
                    "example": 40
                },
                "entry_time": {
                    "type": "string",
                    "example": "2023-07-15T19:20:30+01:00"
                },
                "exit_time": {
                    "type": "string",
                    "example": "2023-07-15T21:20:30+01:00"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "parking_lot_id": {
                    "type": "integer",
                    "example": 1
                },
                "rate": {
                    "type": "number",
                    "example": 20
                },
                "rate_type": {
                    "type": "string",
                    "example": "Hourly"
                },
                "vehicle_type": {
                    "type": "string",
                    "example": "Car"
                }
            }
        },
        "parking-lot-service_internal_models.Ticket": {
            "description": "Ticket is issued when a vehicle is parked",
            "type": "object",
            "properties": {
                "entry_time": {
                    "type": "string",
                    "example": "2023-07-15T19:20:30+01:00"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_parked": {
                    "type": "boolean",
                    "example": true
                },
                "parking_lot_id": {
                    "type": "integer",
                    "example": 1
                },
                "vehicle_number": {
                    "type": "string",
                    "example": "AB01C1234"
                },
                "vehicle_type": {
                    "type": "string",
                    "example": "Car"
                },
                "vehicle_type_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "parking-lot-service_internal_models.VehicleType": {
            "description": "VehicleType holds the vehicle type information",
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "vehicle_type": {
                    "type": "string",
                    "example": "Car"
                }
            }
        }
    }
}